{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaina\\\\Documents\\\\iNotebook-main\\\\iNotebook-main\\\\src\\\\context\\\\NoteState.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport noteContext from './noteContext';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial); //Get all note\n\n  const getNotes = async () => {\n    // TODO : API CALL\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  }; //Add a note\n\n\n  const addNote = async (title, description, tag) => {\n    // TODO : API CALL\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(\"Adding a new note\");\n    const note = {\n      \"_id\": \"6332fc54802c692ee7dee91f\",\n      \"user\": \"632ff1618ba4c589f88ab19d\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-09-27T13:36:20.996Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  }; //Delete a note\n\n\n  const deleteNote = async id => {\n    // TODO : API CALL\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(\"Deleing a note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  }; //Edit a note\n\n\n  const editNote = async (id, title, description, tag) => {\n    // TODO : API CALL\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    let newNotes = JSON.parse(JSON.stringify(notes));\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","noteContext","useState","NoteState","props","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","children"],"sources":["C:/Users/jaina/Documents/iNotebook-main/iNotebook-main/src/context/NoteState.js"],"sourcesContent":["import React from 'react'\nimport noteContext from './noteContext'\nimport { useState } from 'react'\n\nconst NoteState = (props)=>{\n  const host = \"http://localhost:5000\"\n    const notesInitial = []\n      \n      const [notes, setNotes] = useState(notesInitial)\n      \n        //Get all note\n        const getNotes = async()=>{\n          // TODO : API CALL\n          const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n            method: 'GET', \n            headers: {\n              'Content-Type': 'application/json',\n              'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n            }\n          });\n          const json = await response.json()\n          console.log(json)\n          setNotes(json);\n        }\n\n      //Add a note\n      const addNote = async(title, description, tag)=>{\n          // TODO : API CALL\n          const response = await fetch(`${host}/api/notes/addnote`, {\n            method: 'POST', \n            headers: {\n              'Content-Type': 'application/json',\n              'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n            },\n            body: JSON.stringify({title, description, tag}) \n          });\n          const json = response.json(); \n\n          console.log(\"Adding a new note\")\n          const note = {\n            \"_id\": \"6332fc54802c692ee7dee91f\",\n        \"user\": \"632ff1618ba4c589f88ab19d\",\n        \"title\": title,\n        \"description\": description,\n        \"tag\": tag,\n        \"date\": \"2022-09-27T13:36:20.996Z\",\n        \"__v\": 0\n          };\n          setNotes(notes.concat(note))\n      }\n\n      //Delete a note\n      const deleteNote = async (id)=>{\n        // TODO : API CALL\n        const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n          method: 'DELETE', \n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n          },\n        });\n        const json = await response.json(); \n        console.log(json);\n\n        console.log(\"Deleing a note with id\" + id)\n        const newNotes = notes.filter((note)=> {return note._id!==id})\n         setNotes(newNotes);\n      }\n\n      //Edit a note\n      const editNote = async (id, title, description, tag)=>{\n        // TODO : API CALL\n        \n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n          method: 'PUT', \n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMyZmYxNjE4YmE0YzU4OWY4OGFiMTlkIn0sImlhdCI6MTY2NDEwNDUwMH0.WuINcXXvUUXZpahXulPivh4kqdQeHIv12NRLoZ-cTW8'\n          },\n          body: JSON.stringify({title, description, tag}) \n        });\n        const json = response.json(); \n        let newNotes = JSON.parse(JSON.stringify(notes))\n      \n        for(let index=0; index<newNotes.length; index++){\n          const element = newNotes[index];\n          if(element._id === id){\n           newNotes[index].title = title;\n           newNotes[index].description = description;\n           newNotes[index].tag = tag;\n            break;\n          }\n        }\n        setNotes(newNotes)\n      }\n\n    return(\n        <noteContext.Provider value= {{notes, setNotes, addNote, deleteNote, editNote, getNotes}}>\n            {props.children}\n        </noteContext.Provider>\n    )\n    }\nexport default NoteState; "],"mappings":"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"},"metadata":{},"sourceType":"module"}